# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Pull source
        run: |
          cd /home/ubuntu        
          cd Docs-Template-Repo && git pull && cd ..
          
      - name: Build DBR Doc
        run: |
          cd /home/ubuntu
          [ ! -d DBRDoc ] && mkdir -p DBRDoc
          cd barcode-reader-docs && git pull && cd .. && cp -rfp ./barcode-reader-docs/* ./DBRDoc/
          cd barcode-reader-docs-js && git pull && cd .. && cp -rfp ./barcode-reader-docs-js/* ./DBRDoc/
          cd barcode-reader-docs-mobile && git pull && cd .. && cp -rfp ./barcode-reader-docs-mobile/* ./DBRDoc/
          cp -rfp ./Docs-Template-Repo/* ./DBRDoc/
          cd DBRDoc && bundle exec jekyll build
          python3 /home/ubuntu/ftp.py /home/ubuntu/DBRDoc/_site/ ./www.dynamsoft.com/barcode-reader/ prod

      - name: Build DLR Doc
        run: |
          cd /home/ubuntu
          [ ! -d DLRDoc ] && mkdir -p DLRDoc
          [ ! -d label-recognition-docs ] && git clone --depth 1 https://github.com/Dynamsoft/label-recognition-docs.git
          cd label-recognition-docs && git pull && cd .. && cp -rfp ./label-recognition-docs/* ./DLRDoc/
          cp -rfp ./Docs-Template-Repo/* ./DLRDoc/
          cd DLRDoc && bundle exec jekyll build
          python3 /home/ubuntu/ftp.py /home/ubuntu/DLRDoc/_site/ ./www.dynamsoft.com/label-recognition/ prod
          
      - name: Build DLS Doc
        run: |
          cd /home/ubuntu
          [ ! -d DLSDoc ] && mkdir -p DLSDoc
          [ ! -d license-server-docs ] && git clone --depth 1 https://github.com/Dynamsoft/license-server-docs.git
          cd license-server-docs && git pull && cd .. && cp -rfp ./license-server-docs/* ./DLSDoc/
          cp -rfp ./Docs-Template-Repo/* ./DLSDoc/
          cd DLSDoc && bundle exec jekyll build
          python3 /home/ubuntu/ftp.py /home/ubuntu/DLSDoc/_site/ ./www.dynamsoft.com/license-server/docs/ prod
          
      - name: Build DNT Doc
        run: |
          cd /home/ubuntu
          [ ! -d DNTDoc ] && mkdir -p DNTDoc
          [ ! -d dotnet-twain-docs ] && git clone --depth 1 https://github.com/Dynamsoft/dotnet-twain-docs.git
          cd dotnet-twain-docs && git pull && cd .. && cp -rfp ./dotnet-twain-docs/* ./DNTDoc/
          cp -rfp ./Docs-Template-Repo/* ./DNTDoc/
          cd DNTDoc && bundle exec jekyll build
          python3 /home/ubuntu/ftp.py /home/ubuntu/DNTDoc/_site/ ./www.dynamsoft.com/dotnet-twain/docs/ prod

      - name: Build DWT Doc
        run: |
          cd /home/ubuntu
          [ ! -d DWTDoc ] && mkdir -p DWTDoc
          [ ! -d web-twain-docs ] && git clone --depth 1 https://github.com/Dynamsoft/web-twain-docs.git
          cd web-twain-docs && git pull && cd .. && cp -rfp ./web-twain-docs/* ./DWTDoc/
          cp -rfp ./Docs-Template-Repo/* ./DWTDoc/
          cd DWTDoc && bundle exec jekyll build
          python3 /home/ubuntu/ftp.py /home/ubuntu/DWTDoc/_site/ ./www.dynamsoft.com/web-twain/docs/ prod

      - name: Build Company Doc
        run: |
          cd /home/ubuntu
          [ ! -d CompanyDoc ] && mkdir -p CompanyDoc
          [ ! -d company-docs ] && git clone --depth 1 https://github.com/Dynamsoft/company-docs.git
          cd company-docs && git pull && cd .. && cp -rfp ./company-docs/* ./CompanyDoc/
          cp -rfp ./Docs-Template-Repo/* ./CompanyDoc/
          cd CompanyDoc && bundle exec jekyll build
          python3 /home/ubuntu/ftp.py /home/ubuntu/CompanyDoc/_site/ ./www.dynamsoft.com/company/docs/ prod

      - name: Build DCE Doc
        run: |
          cd /home/ubuntu
          [ ! -d DCEDoc ] && mkdir -p DCEDoc
          cd camera-enhancer-docs && git pull && cd .. && cp -rfp ./camera-enhancer-docs/* ./DCEDoc/
          cp -rfp ./Docs-Template-Repo/* ./DCEDoc/
          cd DCEDoc && bundle exec jekyll build
          python3 /home/ubuntu/ftp.py /home/ubuntu/DCEDoc/_site/ ./www.dynamsoft.com/camera-enhancer/docs/ prod


      - name: Build DBR Doc Preview
        run: |
          cd /home/ubuntu
          [ -d DBRDocPreview ] && rm -rf DBRDocPreview
          mkdir -p DBRDocPreview
          cd barcode-reader-docs-preview && git pull && cd .. && cp -rfp ./barcode-reader-docs-preview/* ./DBRDocPreview/
          cd barcode-reader-docs-js-preview && git pull && cd .. && cp -rfp ./barcode-reader-docs-js-preview/* ./DBRDocPreview/
          cd barcode-reader-docs-mobile-preview && git pull && cd .. && cp -rfp ./barcode-reader-docs-mobile-preview/* ./DBRDocPreview/
          cp -rfp ./Docs-Template-Repo/* ./DBRDocPreview/
          sed -i -e "1,3s/blob\/master$/blob\/preview/" \
          -e "1,3s/blob\/main$/blob\/preview/" /home/ubuntu/DBRDocPreview/_config.yml
          cd DBRDocPreview && bundle exec jekyll build
      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_TEST_SITE_SERVER }}
          username: ${{ secrets.FTP_TEST_SITE_USER }}
          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
          port: 7500 
          local-dir: /home/ubuntu/DBRDocPreview/_site/
          server-dir: /www.dynamsoft.com/barcode-reader/ 

      - name: Build DLR Doc Preview
        run: |
          cd /home/ubuntu
          [ -d DLRDocPreview ] && rm -rf DLRDocPreview
          mkdir -p DLRDocPreview
          cd label-recognition-docs-preview && git pull && cd .. && cp -rfp ./label-recognition-docs-preview/* ./DLRDocPreview/
          cp -rfp ./Docs-Template-Repo/* ./DLRDocPreview/
          sed -i -e "1,3s/blob\/master$/blob\/preview/" \
          -e "1,3s/blob\/main$/blob\/preview/" /home/ubuntu/DLRDocPreview/_config.yml
          cd DLRDocPreview && bundle exec jekyll build
      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_TEST_SITE_SERVER }}
          username: ${{ secrets.FTP_TEST_SITE_USER }}
          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
          port: 7500 
          local-dir: /home/ubuntu/DLRDocPreview/_site/
          server-dir: /www.dynamsoft.com/label-recognition/
          


      - name: Build DCE Doc Preview
        run: |
          cd /home/ubuntu
          [ -d DCEDocPreview ] && rm -rf DCEDocPreview
          mkdir -p DCEDocPreview
          cd camera-enhancer-docs-preview && git pull && cd .. && cp -rfp ./camera-enhancer-docs-preview/* ./DCEDocPreview/
          cp -rfp ./Docs-Template-Repo/* ./DCEDocPreview/
          sed -i -e "1,3s/blob\/master$/blob\/preview/" \
          -e "1,3s/blob\/main$/blob\/preview/" /home/ubuntu/DCEDocPreview/_config.yml
          cd DCEDocPreview && bundle exec jekyll build
          
      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_TEST_SITE_SERVER }}
          username: ${{ secrets.FTP_TEST_SITE_USER }}
          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
          port: 7500 
          local-dir: /home/ubuntu/DCEDocPreview/_site/
          server-dir: /www.dynamsoft.com/camera-enhancer/docs/          


      # Runs a set of commands using the runners shell
      - name: Build the site
        run: |
          cd /home/ubuntu
          [ -d DCNDocPreview ] && rm -rf DCNDocPreview
          mkdir DCNDocPreview
          cd content-normalizer-docs-preview && git pull && cd .. && cp -rfp ./content-normalizer-docs-preview/* ./DCNDocPreview/
          cd Docs-Template-Repo && git pull && cd .. && cp -rfp ./Docs-Template-Repo/* ./DCNDocPreview/
          sed -i -e "1,3s/blob\/master$/blob\/preview/" \
          -e "1,3s/blob\/main$/blob\/preview/" /home/ubuntu/DCNDocPreview/_config.yml
          cd DCNDocPreview && bundle exec jekyll build 
          
      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.1.0
        with:
          server: ${{ secrets.FTP_TEST_SITE_SERVER }}
          username: ${{ secrets.FTP_TEST_SITE_USER }}
          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
          port: 7500 
          local-dir: /home/ubuntu/DCNDocPreview/_site/
          server-dir: /www.dynamsoft.com/content-normalizer/


